{
  "lang": {
    "code": "en"
  },
  "cli": {
    "appDescription": "Powerful and flexible task management MCP server",
    "serve": "Start MCP server",
    "version": "Show version information",
    "template": "Task template management",
    "templateDescription": "List and manage templates for creating tasks",
    "templateList": "List available templates",
    "templateShow": "Show template details",
    "templateInit": "Recreate default templates",
    "mcpTest": "Test MCP tools",
    "mcpDescription": "Test MCP (Model Context Protocol) tools directly from command line.",
    "debug": "Enable debug mode",
    "list": "List available MCP tools",
    "call": "Call specific MCP tool",
    "listTasks": "List tasks (gorev_listele shortcut)",
    "createTask": "Create new task (gorev_olustur shortcut)",
    "showTask": "Show task details (gorev_detay shortcut)",
    "listProjects": "List projects (proje_listele shortcut)"
  },
  "flags": {
    "allProjects": "Show tasks from all projects",
    "maxTasks": "Maximum number of tasks",
    "offset": "Starting offset",
    "title": "Task title (required)",
    "taskDescription": "Task description",
    "priority": "Priority (yuksek, orta, dusuk)",
    "projectId": "Project ID",
    "jsonOutput": "JSON format output"
  },
  "error": {
    "dataManagerInit": "failed to initialize data manager: {{.Error}}",
    "mcpServerCreate": "failed to create MCP server: {{.Error}}",
    "serverStart": "failed to start server: {{.Error}}",
    "templateList": "failed to list templates: {{.Error}}",
    "templateNotFound": "template not found: {{.Error}}",
    "templateCreate": "failed to create templates: {{.Error}}",
    "dataManagerCreate": "failed to create data manager: {{.Error}}",
    "toolCallFailed": "tool call failed: {{.Error}}",
    "jsonOutputFailed": "failed to create JSON output: {{.Error}}",
    "titleRequired": "title is required",
    "idRequired": "id parameter is required",
    "titleParamRequired": "baslik parameter is required",
    "taskCreateFailed": "failed to create task: {{.Error}}",
    "taskUpdateFailed": "failed to update task: {{.Error}}",
    "projectCreateFailed": "failed to create project: {{.Error}}",
    "taskListFailed": "failed to list tasks: {{.Error}}",
    "projectListFailed": "failed to list projects: {{.Error}}",
    "taskEditFailed": "failed to edit task: {{.Error}}",
    "taskNotFound": "task not found: {{.Error}}",
    "taskDeleteFailed": "failed to delete task: {{.Error}}",
    "confirmationRequired": "'onay' parameter must be true to delete task",
    "editFieldRequired": "at least one edit field must be specified (baslik, aciklama, oncelik, proje_id or son_tarih)",
    "projectIdRequired": "proje_id parameter is required",
    "projectNotFound": "project not found: {{.Error}}",
    "tasksFetchFailed": "failed to fetch tasks: {{.Error}}",
    "dependencyAddFailed": "failed to add dependency: {{.Error}}",
    "templateIdRequired": "template_id parameter is required",
    "valuesRequired": "degerler parameter is required",
    "taskCreateFromTemplateFailed": "failed to create task from template: {{.Error}}",
    "directTaskCreateDeprecated": "gorev_olustur is deprecated. Please use templateden_gorev_olustur tool.",
    "taskIdRequired": "task_id parameter is required",
    "activeTaskSetFailed": "failed to set active task: {{.Error}}",
    "updatesRequired": "updates parameter is required and must be array",
    "queryRequired": "query parameter is required",
    "invalidQueryFormat": "invalid query format",
    "dbOpenFailed": "failed to open database: {{.Error}}",
    "migrationFailed": "failed to migrate database: {{.Error}}",
    "migrationDriverFailed": "failed to create migration driver: {{.Error}}",
    "migrationInstanceFailed": "failed to create migration instance: {{.Error}}",
    "migrationProcessFailed": "migration process failed: {{.Error}}",
    "transactionFailed": "failed to start transaction: {{.Error}}",
    "selectPrepFailed": "failed to prepare select statement: {{.Error}}",
    "insertPrepFailed": "failed to prepare insert statement: {{.Error}}",
    "tagCreateFailed": "failed to create new tag '{{.Tag}}': {{.Error}}",
    "tagQueryFailed": "failed to query tag '{{.Tag}}': {{.Error}}",
    "taskTagAddFailed": "failed to add task tag '{{.Tag}}': {{.Error}}",
    "circularDependency": "circular dependency detected",
    "projectCheckFailed": "project check failed: {{.Error}}",
    "projectNotFoundId": "project not found: {{.Id}}",
    "activeProjectSetFailed": "failed to set active project: {{.Error}}",
    "activeProjectRemoveFailed": "failed to remove active project: {{.Error}}",
    "invalidDateFormat": "invalid due date format (must be YYYY-MM-DD): {{.Error}}",
    "taskSaveFailed": "failed to save task: {{.Error}}",
    "tagsProcessFailed": "failed to process tags: {{.Error}}",
    "taskTagsSetFailed": "failed to set task tags: {{.Error}}",
    "invalidStatus": "invalid status: {{.Status}}. Valid statuses: {{.ValidStatuses}}",
    "dependencyCheckFailed": "dependency check failed: {{.Error}}",
    "taskCannotStart": "this task cannot be started, the following tasks must be completed first: {{.Dependencies}}",
    "subtasksCheckFailed": "subtasks check failed: {{.Error}}",
    "taskCannotComplete": "this task cannot be completed, all subtasks must be completed first",
    "subtasksFetchFailed": "failed to fetch subtasks: {{.Error}}",
    "subtaskUpdateFailed": "failed to update subtask: {{.Error}}",
    "taskHasSubtasks": "this task cannot be deleted, {{.Count}} subtasks must be deleted first",
    "dependencyFetchFailed": "failed to fetch dependencies: {{.Error}}",
    "sourceTaskNotFound": "source task not found: {{.Error}}",
    "targetTaskNotFound": "target task not found: {{.Error}}",
    "linkAddFailed": "failed to add link: {{.Error}}",
    "dependentTaskNotFound": "dependent task not found: {{.Error}}",
    "parentTaskNotFound": "parent task not found: {{.Error}}",
    "subtaskSaveFailed": "failed to save subtask: {{.Error}}",
    "tagsSetFailed": "failed to set tags: {{.Error}}",
    "circularDependencyCheckFailed": "circular dependency check failed: {{.Error}}",
    "subtaskProjectMismatch": "subtask and parent task must be in same project",
    "fieldsJsonFailed": "failed to convert fields to JSON: {{.Error}}",
    "exampleValuesJsonFailed": "failed to convert example values to JSON: {{.Error}}",
    "templateCreateFailed": "failed to create template: {{.Error}}",
    "templateReadFailed": "failed to read template: {{.Error}}",
    "exampleValuesParseFailed": "failed to parse example values: {{.Error}}",
    "templateNotFoundId": "template not found: {{.Id}}",
    "activeProjectFetchFailed": "failed to fetch active project: {{.Error}}",
    "noActiveProject": "proje_id not specified and no active project set",
    "taskSaveFromTemplateFailed": "failed to save task: {{.Error}}",
    "tagsCreateFromTemplateFailed": "failed to create tags: {{.Error}}",
    "taskTagsSetFromTemplateFailed": "failed to set task tags: {{.Error}}",
    "defaultTemplateCreateFailed": "failed to create default template ({{.Template}}): {{.Error}}",
    "taskNotFoundAi": "task not found: {{.Error}}",
    "contextSaveFailed": "context save error: {{.Error}}",
    "interactionSaveFailed": "interaction save error: {{.Error}}",
    "statusUpdateFailed": "status update error: {{.Error}}",
    "autoStatusUpdateFailed": "auto status update error: {{.Error}}",
    "taskCannotStartDependencies": "this task cannot be started, the following tasks must be completed first: {{.Dependencies}}",
    "subtasksCheckFailed": "subtasks check failed: {{.Error}}",
    "taskCannotCompleteSubtasks": "this task cannot be completed, all subtasks must be completed first",
    "taskHasSubtasksCannotDelete": "this task cannot be deleted, {{.Count}} subtasks must be deleted first",
    "templateNotFoundId": "template not found: {{.Id}}",
    "requiredFieldMissing": "required field missing: {{.Field}}",
    "taskSaveFromTemplateFailed": "failed to save task: {{.Error}}",
    "tagsCreateFromTemplateFailed": "failed to create tags: {{.Error}}",
    "taskTagsSetFromTemplateFailed": "failed to set task tags: {{.Error}}",
    "contextInitializationFailed": "failed to initialize AI context: {{.Error}}",
    "contextRetrievalFailed": "failed to retrieve AI context: {{.Error}}",
    "jsonMarshalFailed": "JSON marshalling error ({{.Field}}): {{.Error}}",
    "interactionQueryFailed": "AI interaction query failed: {{.Error}}",
    "todayInteractionQueryFailed": "today's interaction query failed: {{.Error}}",
    "lastInteractionUpdateFailed": "last interaction update failed ({{.TaskID}}): {{.Error}}",
    "taskNotFoundBatch": "task not found: {{.Error}}",
    "invalidStatusBatch": "invalid status: {{.Status}}",
    "invalidPriorityBatch": "invalid priority: {{.Priority}}",
    "titleCannotBeEmpty": "title cannot be empty",
    "invalidDateFormatBatch": "invalid date format (expected YYYY-MM-DD): {{.Date}}",
    "taskUpdateError": "update error: {{.Error}}",
    "currentTagsRemoveFailed": "failed to remove current tags: {{.Error}}",
    "projectSaveFailed": "failed to save project: {{.Error}}",
    "activeProjectSetFailed": "failed to set active project: {{.Error}}",
    "activeProjectGetFailed": "failed to get active project: {{.Error}}",
    "noActiveProjectSet": "No active project has been set yet.",
    "activeProjectRemoveFailed": "failed to remove active project: {{.Error}}",
    "activeProjectRemoved": "✓ Active project setting removed.",
    "taskUpdateFailed": "failed to update task: {{.Error}}",
    "projectCreateFailed": "failed to create project: {{.Error}}",
    "taskNotFoundForView": "task not found: {{.Error}}",
    "idParameterRequired": "id parameter is required",
    "editFieldRequiredDetailed": "at least one edit field must be specified (baslik, aciklama, oncelik, proje_id or son_tarih)",
    "taskEditFailed": "failed to edit task: {{.Error}}",
    "taskEditSuccess": "✓ Task edited: {{.Title}}",
    "deleteConfirmationRequired": "'onay' parameter must be true to delete task",
    "taskDeleteFailed": "failed to delete task: {{.Error}}",
    "taskIdsRequired": "task_ids parameter is required",
    "taskIdsArrayRequired": "task_ids must be in array format",
    "invalidTaskIdIndex": "invalid task ID index {{.Index}}",
    "bulkStatusChangeFailed": "bulk status change failed: {{.Error}}",
    "tagsParameterRequired": "tags parameter is required",
    "tagsArrayRequired": "tags must be in array format",
    "invalidTagIndex": "invalid tag index {{.Index}}",
    "bulkTagOperationFailed": "bulk tag operation failed: {{.Error}}",
    "suggestionGenerationFailed": "suggestion generation failed: {{.Error}}",
    "intelligentTaskCreationFailed": "intelligent task creation failed: {{.Error}}",
    "projectIdParameterRequired": "proje_id parameter is required",
    "projectNotFoundDetailed": "project not found: {{.Error}}",
    "tasksFetchFailed": "failed to fetch tasks: {{.Error}}",
    "summaryFetchFailed": "failed to fetch summary: {{.Error}}",
    "sourceIdRequired": "kaynak_id parameter is required",
    "targetIdRequired": "hedef_id parameter is required",
    "connectionTypeRequired": "baglanti_tipi parameter is required",
    "dependencyAddFailed": "failed to add dependency: {{.Error}}",
    "templateIdParameterRequired": "template_id parameter is required",
    "valuesParameterRequired": "degerler parameter is required and must be an object",
    "templateNotFoundDetailed": "template not found: {{.Error}}",
    "invalidFieldValue": "invalid value for field '{{.Field}}': '{{.Value}}'. Valid values: {{.ValidValues}}",
    "taskCreateFromTemplateFailed": "failed to create task from template: {{.Error}}",
    "parentIdRequired": "parent_id parameter is required",
    "titleParameterRequired": "title parameter is required",
    "subtaskCreateFailed": "failed to create subtask: {{.Error}}",
    "taskIdParameterRequired": "gorev_id parameter is required",
    "parentChangeFailedCi": "failed to change parent task: {{.Error}}",
    "taskMovedToRoot": "✓ Task moved to root level",
    "taskMovedToParent": "✓ Task moved to new parent task",
    "hierarchyFetchFailed": "failed to fetch hierarchy: {{.Error}}",
    "unknownTool": "unknown tool: {{.Tool}}",
    "activeTaskSetFailed": "failed to set active task: {{.Error}}",
    "activeTaskSetSuccess": "✅ Task {{.TaskID}} successfully set as active task.",
    "activeTaskGetFailed": "failed to get active task: {{.Error}}",
    "noActiveTaskCurrent": "ℹ️ No active task currently.",
    "recentTasksFetchFailed": "failed to fetch recent tasks: {{.Error}}",
    "noRecentTasks": "ℹ️ No recently interacted tasks.",
    "contextSummaryFailed": "failed to get context summary: {{.Error}}",
    "updatesParameterRequired": "updates parameter is required and must be array",
    "noValidUpdatesFound": "No valid updates found",
    "batchUpdateFailed": "batch update failed: {{.Error}}",
    "queryParameterRequired": "query parameter is required",
    "queryFailed": "query failed: {{.Error}}",
    "noQueryResults": "ℹ️ No results found for query '{{.Query}}'.",
    "fileWatcherInitFailed": "File watcher system could not be initialized",
    "taskIdRequiredFileWatch": "task_id is required",
    "filePathRequired": "file_path is required",
    "taskNotFoundFileWatch": "Task not found: {{.Error}}",
    "fileWatchAddFailed": "Failed to add file watch: {{.Error}}",
    "fileWatchRemoveFailed": "Failed to remove file watch: {{.Error}}"
  },
  "success": {
    "activeProjectSet": "✓ Active project set: {{.Project}}",
    "activeProjectRemoved": "✓ Active project setting removed.",
    "taskUpdated": "✓ Task updated: {{.OldStatus}} → {{.NewStatus}}",
    "projectCreated": "✓ Project created: {{.Name}} (ID: {{.Id}})",
    "taskEdited": "✓ Task edited: {{.Title}}",
    "taskDeleted": "✓ Task deleted: {{.Title}} (ID: {{.Id}})",
    "dependencyAdded": "✓ Dependency added: {{.Source}} -> {{.Target}} ({{.Type}})",
    "subtaskCreated": "✓ Subtask created: {{.Title}} (ID: {{.Id}})",
    "taskMovedToRoot": "✓ Task moved to root level",
    "taskMovedToParent": "✓ Task moved to new parent task",
    "taskCreatedFromTemplate": "✓ Task created from template: {{.Title}} (ID: {{.Id}})",
    "activeTaskSet": "{{.Title}} successfully set as active task",
    "defaultTemplatesCreated": "✓ Default templates created successfully.",
    "dependencyAddedDetailed": "✓ Dependency added: {{.Source}} -> {{.Target}} ({{.Type}})",
    "subtaskCreatedDetailed": "✓ Subtask created: {{.Title}} (ID: {{.Id}})",
    "taskDeletedDetailed": "✓ Task deleted: {{.Title}} (ID: {{.Id}})",
    "fileWatchAdded": "✅ File path '{{.FilePath}}' added to watch for task '{{.TaskTitle}}'.\n\nFile changes will be automatically tracked and task status will be updated as needed.",
    "fileWatchRemoved": "✅ File path '{{.FilePath}}' removed from watch for task ID {{.TaskID}}."
  },
  "display": {
    "noTemplates": "No templates found yet.",
    "title": "Title: {{.Title}}",
    "desc": "Description: {{.Description}}",
    "titleTemplate": "Title Template: {{.Template}}",
    "options": "Options: {{.Options}}",
    "exampleDescription": "Example Description:",
    "detailInfo": "For details: gorev template show <template-id>",
    "availableTools": "Available MCP Tools:",
    "toolDescription": "Description: {{.Description}}"
  },
  "headers": {
    "taskList": "## Task List",
    "projectList": "## Project List",
    "pending": "### Pending",
    "inProgress": "### In Progress",
    "completed": "### Completed",
    "cancelled": "### Cancelled",
    "dependencies": "## 🔗 Dependencies",
    "waitingTasks": "### 📋 Tasks waiting for this task:",
    "dependentTasks": "### 🎯 Tasks dependent on this task:",
    "subtasks": "### 🏗️ Subtasks",
    "aiSessionSummary": "## 🤖 AI Session Summary",
    "batchUpdateResult": "## 📦 Batch Update Result",
    "successfulUpdates": "✅ Successful Updates",
    "failedUpdates": "❌ Failed Updates"
  },
  "messages": {
    "noProjectTasks": "*No tasks found for this project.*",
    "noProjects": "*No projects found yet.*",
    "dependenciesNotAvailable": "*Dependency information not available*",
    "noDependencies": "*This task has no dependencies*",
    "notDependentOnAny": "*Not dependent on any task*",
    "noDependentTasks": "*No tasks depend on this task*",
    "noSubtasks": "*No subtasks found*",
    "noActiveTask": "No active task currently",
    "lastUpdate": "Last update: {{.Date}}",
    "creation": "Created: {{.Date}}",
    "taskId": "ID: {{.Id}}",
    "def": "Definition: {{.Definition}}",
    "taskCount": "Task Count: {{.Count}}",
    "dependentTaskCount": "Dependent task count: {{.Count}}",
    "incompleteDependencyCount": "Incomplete dependency count: {{.Count}}",
    "dependentOnThisCount": "Tasks depending on this: {{.Count}}",
    "tag": "tag",
    "noMatchingTasks": "no matching tasks found",
    "tagCount": "{{.Count}} tags",
    "projectLabel": "Project: {{.Name}}",
    "tagLabel": "Tag: {{.Tags}}",
    "tagCountLabel": "Tag: {{.Count}} items",
    "sizeWarning": "*Note: {{.Count}} more tasks available due to response size limit. Use 'offset' parameter to continue.*",
    "dateLabel": "Date: {{.Date}}",
    "projectHeader": "Project: {{.Name}}",
    "projectDetailLabel": "- **Project:** {{.Name}}",
    "noTasks": "No tasks found yet.",
    "noTasksInProject": "No tasks found in {{.Project}} project yet.",
    "taskListCount": "Tasks ({{.Count}})",
    "noProjects": "No projects found yet.",
    "noTemplates": "No templates found yet.",
    "taskCount": "Tasks ({{.Start}}-{{.End}} / {{.Total}})",
    "upperTaskHeader": "## 📍 Parent Tasks",
    "currentTaskMarker": "└─ **{{.Title}}** (Current Task)",
    "subtaskStats": "## 📈 Subtask Statistics",
    "totalSubtasks": "- **Total Subtasks:** {{.Count}}",
    "progressPercent": "- **Progress:** {{.Percent}}%",
    "directSubtasks": "## 🌳 Direct Subtasks",
    "hierarchyTitle": "# 📊 Task Hierarchy: {{.Title}}",
    "exampleLabel": "example {{.Field}}",
    "fieldSelect": "select [{{.Options}}]",
    "dryRunResult": "🔍 **Dry Run Result**",
    "bulkStatusComplete": "✅ **Bulk Status Change Completed**",
    "processedTasks": "**Processed Tasks:** {{.Count}}",
    "successfulTasks": "**Successful:** {{.Count}}",
    "failedTasks": "**Failed:** {{.Count}}",
    "warningTasks": "**Warnings:** {{.Count}}",
    "executionTime": "**Duration:** {{.Duration}}",
    "successfulTasksHeader": "**✅ Successful Tasks:**",
    "failedTasksHeader": "**❌ Failed Tasks:**",
    "warningsHeader": "**⚠️ Warnings:**",
    "bulkTagComplete": "✅ **Bulk Tag Operation Completed**",
    "operationLabel": "**Operation:** {{.Operation}}",
    "tagsLabel": "**Tags:** {{.Tags}}",
    "smartSuggestions": "🎯 **Smart Suggestions**",
    "totalSuggestions": "**Total:** {{.Count}} suggestions",
    "noSuggestionsNow": "ℹ️ No suggestions available currently.",
    "intelligentTaskCreated": "🧠 **Intelligent Task Created**",
    "mainTask": "### 📋 Main Task",
    "smartPriority": "**Smart Priority:** {{.Emoji}} {{.Priority}}",
    "estimatedTime": "**Estimated Time:** {{.Hours}} hours",
    "autoSubtasks": "### 🌳 Auto Subtasks ({{.Count}})",
    "suggestedTemplate": "### 📋 Suggested Template",
    "templateUsage": "**Usage:** View details with `template_listele`",
    "similarTasks": "### 🔍 Similar Tasks ({{.Count}})",
    "aiAnalysisResults": "### 🎯 AI Analysis Results",
    "confidenceScores": "**Confidence Scores:**",
    "priorityConfidence": "  - Priority: {{.Percent}}%",
    "timeConfidence": "  - Time estimation: {{.Percent}}%",
    "subtaskConfidence": "  - Subtask analysis: {{.Percent}}%",
    "taskDetailTip": "💡 **Tip:** View details with `gorev_detay id='{{.Id}}'`",
    "taskHierarchyInfo": "{{.Indent}}Dependent task count: {{.Count}}",
    "incompleteDepInfo": "{{.Indent}}Incomplete dependency count: {{.Count}}",
    "dependentOnThisInfo": "{{.Indent}}Tasks depending on this: {{.Count}}",
    "taskRangeCount": "{{.Name}} ({{.Count}} tasks)",
    "noTasksInThisProject": "{{.Name}} - No tasks",
    "moreTasksLimit": "*... and {{.Count}} more tasks (size limit)*",
    "templateListHeader": "## 📋 Task Templates",
    "templateUsageTip": "💡 **Usage:** Use `templateden_gorev_olustur` command with template ID and field values."
  },
  "common": {
    "fields": {
      "id_base": "unique ID",
      "id_simple": "ID",
      "task_id": "task's {{.Type}} ID",
      "project_id": "project's unique ID",
      "parent_id": "parent task's ID",
      "template_id": "template's ID",
      "source_id": "source task's ID",
      "target_id": "target task's ID"
    },
    "prefixes": {
      "new": "New",
      "filter": "Filter by",
      "return": "Maximum number of",
      "skip": "Number to skip",
      "delete": "Task to delete",
      "active": "Task to set as active",
      "move": "Task to move",
      "hierarchy": "Task to show hierarchy for",
      "dependent": "Dependent task",
      "dependency_target": "Dependency target"
    },
    "entities": {
      "task": "task",
      "project": "project",
      "template": "template"
    },
    "suffixes": {
      "required": "parameter is required",
      "invalid": "invalid value for",
      "count": "count",
      "list": "list"
    },
    "pagination": {
      "limit_pattern": "{{.Entity}} to return (default: {{.Default}}, max: {{.Max}})",
      "offset_pattern": "{{.Entity}} to skip for pagination (default: 0)"
    },
    "patterns": {
      "new_field": "{{.Prefix}} {{.Field}}",
      "filter_field": "{{.Prefix}} {{.Entity}} {{.Field}}",
      "id_description": "{{.Entity}} {{.IdType}}"
    }
  },
  "tools": {
    "descriptions": {
      "gorev_olustur": "⚠️ DEPRECATED: This tool has been deprecated since v0.10.0. Please use 'templateden_gorev_olustur' tool.",
      "gorev_listele": "Lists tasks by filtering and sorting according to criteria such as status, project, due date.",
      "gorev_detay": "Shows all details of a task in markdown format. Includes information like dependencies, tags, due date.",
      "gorev_guncelle": "Updates a task's status (beklemede, devam_ediyor, tamamlandi).",
      "gorev_duzenle": "Edits a task's properties like title, description, priority.",
      "gorev_sil": "Permanently deletes a task. WARNING: This operation cannot be undone!",
      "proje_olustur": "Creates a new project.",
      "proje_listele": "Lists all projects with task counts.",
      "proje_gorevleri": "Shows tasks belonging to specified project organized by status groups.",
      "aktif_proje_ayarla": "Sets the active project to work on. New tasks will be automatically assigned to this project.",
      "aktif_proje_goster": "Shows the currently active project.",
      "aktif_proje_kaldir": "Removes the active project setting. No project will be active anymore.",
      "template_listele": "Lists available task templates. Templates are used for consistent task creation.",
      "templateden_gorev_olustur": "Creates a new task using the specified template. This is the ONLY way to create tasks in v0.10.0+.",
      "gorev_set_active": "Sets active task for AI session and automatically changes its status to 'devam_ediyor'.",
      "gorev_get_active": "Returns the currently active task for AI session.",
      "gorev_recent": "Returns recently interacted tasks.",
      "gorev_context_summary": "AI-optimized context summary. Shows active task, recent tasks, priorities and blockers.",
      "gorev_batch_update": "Updates multiple tasks at once. Used for efficient bulk operations.",
      "gorev_nlp_query": "Natural language task search. Examples: 'high priority', 'working on today', 'tag:bug'",
      "gorev_file_watch_add": "Adds a file path to a task and starts monitoring for automatic status updates.",
      "gorev_file_watch_remove": "Removes a file path from a task and stops monitoring.",
      "gorev_file_watch_list": "Lists monitored file paths for a task.",
      "gorev_file_watch_stats": "Shows file watcher system statistics.",
      "gorev_altgorev_olustur": "Creates a subtask under an existing task. Subtask inherits the parent's project.",
      "gorev_ust_degistir": "Changes a task's parent or moves to root level.",
      "gorev_hiyerarsi_goster": "Shows a task's complete hierarchy. Displays parent tasks, subtasks and siblings in full tree structure.",
      "gorev_bagimlilik_ekle": "Creates a dependency relationship between two tasks.",
      "ozet_goster": "Summary report showing system status. Includes total task counts, project statistics, priority distributions and recent activities."
    },
    "params": {
      "descriptions": {
        "id_field": "Task's unique ID",
        "task_id": "Task ID to set as active",
        "parent_id": "Parent task ID",
        "gorev_id": "Task ID to move",
        "yeni_parent_id": "New parent task ID. Leave empty to move to root level",
        "kaynak_id": "Dependent task ID (the one that will wait)",
        "hedef_id": "Dependency target ID (must be completed first)",
        "proje_id": "Project's unique ID",
        "template_id": "Template ID to use",
        "durum": "New status",
        "baslik": "New title",
        "aciklama": "New description",
        "oncelik": "New priority level",
        "son_tarih": "New due date (YYYY-MM-DD format)",
        "onay": "Must be true to confirm deletion",
        "durum_filter": "Task status to filter (beklemede, devam_ediyor, tamamlandi)",
        "sirala": "Sorting criteria (son_tarih_asc, son_tarih_desc)",
        "filtre": "Special filter type (acil: due within 7 days, gecmis: overdue)",
        "etiket": "Filter by tag name",
        "tum_projeler": "If true, show tasks from all projects, if false only from active project",
        "limit": "Maximum number of tasks to return (default: 50, max: 200)",
        "offset": "Number of tasks to skip for pagination (default: 0)",
        "isim": "Project name",
        "tanim": "Project description",
        "kategori": "Filter by template category",
        "degerler": "Values for template fields",
        "file_path": "File path to monitor",
        "baglanti_tipi": "Dependency type",
        "query": "Natural language query",
        "updates": "Update list",
        "etiketler": "Comma-separated tag list"
      }
    }
  }
}