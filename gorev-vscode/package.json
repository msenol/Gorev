{
  "name": "gorev-vscode",
  "displayName": "Gorev",
  "description": "Powerful task management with unlimited subtask hierarchy, dependency visualization, and smart progress tracking for VS Code powered by MCP protocol",
  "version": "0.5.0",
  "publisher": "mehmetsenol",
  "icon": "media/icon.png",
  "engines": {
    "vscode": "^1.95.0"
  },
  "categories": [
    "Other",
    "Programming Languages"
  ],
  "keywords": [
    "task",
    "todo", 
    "project management",
    "mcp",
    "gorev",
    "dependency",
    "subtask",
    "hierarchy",
    "workflow",
    "productivity"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/msenol/Gorev.git"
  },
  "homepage": "https://github.com/msenol/Gorev#readme",
  "bugs": {
    "url": "https://github.com/msenol/Gorev/issues"
  },
  "license": "MIT",
  "galleryBanner": {
    "color": "#1e1e1e",
    "theme": "dark"
  },
  "screenshots": [
    {
      "path": "images/screenshots/screenshot-1-treeview.png"
    },
    {
      "path": "images/screenshots/screenshot-2-task-detail.png"
    },
    {
      "path": "images/screenshots/screenshot-3-filters.png"
    },
    {
      "path": "images/screenshots/screenshot-4-commands.png"
    },
    {
      "path": "images/screenshots/screenshot-5-statusbar.png"
    },
    {
      "path": "images/screenshots/screenshot-6-dark-theme.png"
    }
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "configuration": {
      "title": "Gorev",
      "properties": {
        "gorev.serverPath": {
          "type": "string",
          "default": "/mnt/f/Development/Projects/Gorev/gorev-mcpserver/build/gorev",
          "description": "Full path to the Gorev MCP server executable (e.g., /path/to/gorev or C:\\path\\to\\gorev.exe)"
        },
        "gorev.autoConnect": {
          "type": "boolean",
          "default": true,
          "description": "Automatically connect to Gorev server on startup"
        },
        "gorev.showStatusBar": {
          "type": "boolean",
          "default": true,
          "description": "Show Gorev status in the status bar"
        },
        "gorev.refreshInterval": {
          "type": "number",
          "default": 30,
          "description": "Refresh interval in seconds (0 to disable auto-refresh)"
        },
        "gorev.treeView.grouping": {
          "type": "string",
          "default": "status",
          "enum": ["none", "status", "priority", "project", "tag", "dueDate"],
          "enumDescriptions": [
            "No grouping - show all tasks in a flat list",
            "Group by status (Pending, In Progress, Completed)",
            "Group by priority (High, Medium, Low)",
            "Group by project",
            "Group by tags",
            "Group by due date (Overdue, Today, This Week, Later)"
          ],
          "description": "How to group tasks in the tree view"
        },
        "gorev.treeView.sorting": {
          "type": "string",
          "default": "priority",
          "enum": ["title", "priority", "dueDate", "createdDate", "status"],
          "enumDescriptions": [
            "Sort by task title",
            "Sort by priority",
            "Sort by due date",
            "Sort by creation date",
            "Sort by status"
          ],
          "description": "How to sort tasks within groups"
        },
        "gorev.treeView.sortAscending": {
          "type": "boolean",
          "default": false,
          "description": "Sort tasks in ascending order"
        },
        "gorev.treeView.showCompleted": {
          "type": "boolean",
          "default": true,
          "description": "Show completed tasks in the tree view"
        },
        "gorev.treeView.showEmptyGroups": {
          "type": "boolean",
          "default": false,
          "description": "Show empty groups in the tree view"
        },
        "gorev.treeView.showAllProjects": {
          "type": "boolean",
          "default": true,
          "description": "Show tasks from all projects by default (true) or only from active project (false)"
        },
        "gorev.dragDrop.allowTaskMove": {
          "type": "boolean",
          "default": true,
          "description": "Allow moving tasks via drag and drop"
        },
        "gorev.dragDrop.allowStatusChange": {
          "type": "boolean",
          "default": true,
          "description": "Allow changing task status via drag and drop"
        },
        "gorev.dragDrop.allowPriorityChange": {
          "type": "boolean",
          "default": true,
          "description": "Allow changing task priority via drag and drop"
        },
        "gorev.dragDrop.allowProjectMove": {
          "type": "boolean",
          "default": true,
          "description": "Allow moving tasks between projects via drag and drop"
        },
        "gorev.dragDrop.allowDependencyCreate": {
          "type": "boolean",
          "default": true,
          "description": "Allow creating task dependencies via drag and drop"
        },
        "gorev.dragDrop.allowParentChange": {
          "type": "boolean",
          "default": true,
          "description": "Allow changing task parent via drag and drop"
        },
        "gorev.dragDrop.showDropIndicator": {
          "type": "boolean",
          "default": true,
          "description": "Show visual indicators when dragging over drop zones"
        },
        "gorev.treeView.visuals.showProgressBars": {
          "type": "boolean",
          "default": true,
          "description": "Show progress bars for parent tasks with subtasks"
        },
        "gorev.treeView.visuals.showPriorityBadges": {
          "type": "boolean",
          "default": true,
          "description": "Show priority badges (üî•‚ö°‚ÑπÔ∏è) on tasks"
        },
        "gorev.treeView.visuals.showDueDateIndicators": {
          "type": "boolean",
          "default": true,
          "description": "Show due date indicators with smart formatting"
        },
        "gorev.treeView.visuals.showDependencyBadges": {
          "type": "boolean",
          "default": true,
          "description": "Show dependency badges (üîíüîìüîó) on tasks"
        },
        "gorev.treeView.visuals.showTagPills": {
          "type": "boolean",
          "default": true,
          "description": "Show tags as colored pill badges"
        },
        "gorev.treeView.visuals.progressBarStyle": {
          "type": "string",
          "default": "blocks",
          "enum": ["blocks", "percentage", "both"],
          "enumDescriptions": [
            "Show progress as block characters (‚ñà‚ñë)",
            "Show progress as percentage only",
            "Show both blocks and percentage"
          ],
          "description": "Style for progress indicators"
        },
        "gorev.treeView.visuals.dueDateFormat": {
          "type": "string",
          "default": "smart",
          "enum": ["smart", "relative", "absolute"],
          "enumDescriptions": [
            "Smart formatting (Today, Tomorrow, 3d, etc.)",
            "Always relative (3 days left, 2 days overdue)",
            "Always absolute date (15 Jan)"
          ],
          "description": "How to format due dates in task descriptions"
        },
        "gorev.treeView.visuals.maxTagsToShow": {
          "type": "number",
          "default": 3,
          "minimum": 0,
          "maximum": 10,
          "description": "Maximum number of tags to show in task description (0 = hide tags)"
        },
        "gorev.dragDrop.animateOnDrop": {
          "type": "boolean",
          "default": true,
          "description": "Show success animation after dropping"
        },
        "gorev.pagination.pageSize": {
          "type": "number",
          "default": 10,
          "minimum": 10,
          "maximum": 500,
          "description": "Number of tasks to load per page (to prevent token limit errors)"
        },
        "gorev.filterProfiles": {
          "type": "object",
          "default": {},
          "description": "Saved filter profiles",
          "patternProperties": {
            ".*": {
              "type": "object",
              "properties": {
                "searchQuery": { "type": "string" },
                "durum": { "type": "string" },
                "oncelik": { "type": "string" },
                "projeId": { "type": "string" },
                "tags": { "type": "array", "items": { "type": "string" } },
                "overdue": { "type": "boolean" },
                "dueToday": { "type": "boolean" },
                "dueThisWeek": { "type": "boolean" },
                "hasTag": { "type": "boolean" },
                "hasDependency": { "type": "boolean" }
              }
            }
          }
        },
        "gorev.debug.useWrapper": {
          "type": "boolean",
          "default": false,
          "description": "Use debug wrapper to log MCP communication"
        },
        "gorev.debug.logPath": {
          "type": "string",
          "default": "/tmp/gorev-debug",
          "description": "Path to debug log directory"
        },
        "gorev.debug.serverTimeout": {
          "type": "number",
          "default": 30000,
          "minimum": 5000,
          "maximum": 120000,
          "description": "Server response timeout in milliseconds"
        }
      }
    },
    "commands": [
      {
        "command": "gorev.createTask",
        "title": "Create Task",
        "category": "Gorev",
        "icon": "$(add)"
      },
      {
        "command": "gorev.refreshTasks",
        "title": "Refresh Tasks",
        "category": "Gorev",
        "icon": "$(refresh)"
      },
      {
        "command": "gorev.createProject",
        "title": "Create Project",
        "category": "Gorev",
        "icon": "$(folder-opened)"
      },
      {
        "command": "gorev.setActiveProject",
        "title": "Set Active Project",
        "category": "Gorev"
      },
      {
        "command": "gorev.showTaskDetail",
        "title": "Show Task Details",
        "category": "Gorev"
      },
      {
        "command": "gorev.updateTaskStatus",
        "title": "Update Task Status",
        "category": "Gorev"
      },
      {
        "command": "gorev.deleteTask",
        "title": "Delete Task",
        "category": "Gorev",
        "icon": "$(trash)"
      },
      {
        "command": "gorev.createSubtask",
        "title": "Create Subtask",
        "category": "Gorev",
        "icon": "$(add)"
      },
      {
        "command": "gorev.changeParent",
        "title": "Change Parent Task",
        "category": "Gorev",
        "icon": "$(move)"
      },
      {
        "command": "gorev.removeParent",
        "title": "Remove Parent (Make Root Task)",
        "category": "Gorev",
        "icon": "$(ungroup-by-ref-type)"
      },
      {
        "command": "gorev.addDependency",
        "title": "Add Dependency",
        "category": "Gorev",
        "icon": "$(link)"
      },
      {
        "command": "gorev.quickCreateTask",
        "title": "Quick Create Task",
        "category": "Gorev"
      },
      {
        "command": "gorev.showSummary",
        "title": "Show Summary",
        "category": "Gorev",
        "icon": "$(graph)"
      },
      {
        "command": "gorev.connect",
        "title": "Connect to Server",
        "category": "Gorev",
        "icon": "$(plug)"
      },
      {
        "command": "gorev.disconnect",
        "title": "Disconnect from Server",
        "category": "Gorev",
        "icon": "$(debug-disconnect)"
      },
      {
        "command": "gorev.selectTask",
        "title": "Select Task",
        "category": "Gorev"
      },
      {
        "command": "gorev.setGrouping",
        "title": "Change Grouping",
        "category": "Gorev",
        "icon": "$(group-by-ref-type)"
      },
      {
        "command": "gorev.setSorting",
        "title": "Change Sorting",
        "category": "Gorev",
        "icon": "$(sort-precedence)"
      },
      {
        "command": "gorev.filterTasks",
        "title": "Filter Tasks",
        "category": "Gorev",
        "icon": "$(filter)"
      },
      {
        "command": "gorev.clearFilter",
        "title": "Clear Filter",
        "category": "Gorev",
        "icon": "$(clear-all)"
      },
      {
        "command": "gorev.toggleShowCompleted",
        "title": "Toggle Show Completed",
        "category": "Gorev",
        "icon": "$(eye)"
      },
      {
        "command": "gorev.selectAll",
        "title": "Select All Tasks",
        "category": "Gorev"
      },
      {
        "command": "gorev.deselectAll",
        "title": "Deselect All Tasks",
        "category": "Gorev"
      },
      {
        "command": "gorev.bulkUpdateStatus",
        "title": "Bulk Update Status",
        "category": "Gorev"
      },
      {
        "command": "gorev.bulkDelete",
        "title": "Bulk Delete Tasks",
        "category": "Gorev"
      },
      {
        "command": "gorev.editTaskTitle",
        "title": "Edit Task Title",
        "category": "Gorev"
      },
      {
        "command": "gorev.quickStatusChange",
        "title": "Quick Status Change",
        "category": "Gorev"
      },
      {
        "command": "gorev.quickPriorityChange",
        "title": "Quick Priority Change",
        "category": "Gorev"
      },
      {
        "command": "gorev.quickDateChange",
        "title": "Quick Date Change",
        "category": "Gorev"
      },
      {
        "command": "gorev.detailedEdit",
        "title": "Edit Task Details",
        "category": "Gorev",
        "icon": "$(edit)"
      },
      {
        "command": "gorev.debug.seedTestData",
        "title": "Seed Test Data",
        "category": "Gorev Debug",
        "icon": "$(beaker)"
      },
      {
        "command": "gorev.debug.clearTestData",
        "title": "Clear Test Data",
        "category": "Gorev Debug",
        "icon": "$(trash)"
      },
      {
        "command": "gorev.toggleDebugMode",
        "title": "Toggle Debug Mode",
        "category": "Gorev Debug",
        "icon": "$(debug)"
      },
      {
        "command": "gorev.showDebugLogs",
        "title": "Show Debug Logs",
        "category": "Gorev Debug",
        "icon": "$(output)"
      },
      {
        "command": "gorev.clearDebugLogs",
        "title": "Clear Debug Logs",
        "category": "Gorev Debug",
        "icon": "$(clear-all)"
      },
      {
        "command": "gorev.testConnection",
        "title": "Test MCP Connection",
        "category": "Gorev Debug",
        "icon": "$(testing-run-icon)"
      },
      {
        "command": "gorev.showSearchInput",
        "title": "Search Tasks",
        "category": "Gorev",
        "icon": "$(search)"
      },
      {
        "command": "gorev.showFilterMenu",
        "title": "Show Filter Menu",
        "category": "Gorev",
        "icon": "$(filter)"
      },
      {
        "command": "gorev.showFilterProfiles",
        "title": "Show Filter Profiles",
        "category": "Gorev",
        "icon": "$(bookmark)"
      },
      {
        "command": "gorev.clearAllFilters",
        "title": "T√ºm Filtreleri Temizle",
        "category": "Gorev",
        "icon": "$(clear-all)"
      },
      {
        "command": "gorev.toggleAllProjects",
        "title": "T√ºm Projeler / Aktif Proje Arasƒ±nda Ge√ßi≈ü",
        "category": "Gorev",
        "icon": "$(globe)"
      },
      {
        "command": "gorev.filterOverdue",
        "title": "Show Overdue Tasks",
        "category": "Gorev Filter"
      },
      {
        "command": "gorev.filterDueToday",
        "title": "Show Tasks Due Today",
        "category": "Gorev Filter"
      },
      {
        "command": "gorev.filterDueThisWeek",
        "title": "Show Tasks Due This Week",
        "category": "Gorev Filter"
      },
      {
        "command": "gorev.filterHighPriority",
        "title": "Show High Priority Tasks",
        "category": "Gorev Filter"
      },
      {
        "command": "gorev.filterActiveProject",
        "title": "Show Active Project Tasks",
        "category": "Gorev Filter"
      },
      {
        "command": "gorev.filterByTag",
        "title": "Filter by Tag",
        "category": "Gorev Filter"
      },
      {
        "command": "gorev.openTemplateWizard",
        "title": "Open Template Wizard",
        "category": "Gorev",
        "icon": "$(wand)"
      },
      {
        "command": "gorev.createFromTemplate",
        "title": "Create Task from Template",
        "category": "Gorev",
        "icon": "$(file-code)"
      },
      {
        "command": "gorev.quickCreateFromTemplate",
        "title": "Quick Create from Template",
        "category": "Gorev"
      },
      {
        "command": "gorev.refreshTemplates",
        "title": "Refresh Templates",
        "category": "Gorev",
        "icon": "$(refresh)"
      },
      {
        "command": "gorev.initDefaultTemplates",
        "title": "Initialize Default Templates",
        "category": "Gorev",
        "icon": "$(cloud-download)"
      },
      {
        "command": "gorev.showTemplateDetails",
        "title": "Show Template Details",
        "category": "Gorev"
      },
      {
        "command": "gorev.exportTemplate",
        "title": "Export Template",
        "category": "Gorev",
        "icon": "$(export)"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "gorev",
          "title": "Gorev",
          "icon": "media/icon.svg"
        }
      ]
    },
    "views": {
      "gorev": [
        {
          "id": "gorevTasks",
          "name": "Tasks",
          "icon": "$(checklist)",
          "contextualTitle": "Gorev Tasks"
        },
        {
          "id": "gorevProjects",
          "name": "Projects",
          "icon": "$(folder-library)",
          "contextualTitle": "Gorev Projects"
        },
        {
          "id": "gorevTemplates",
          "name": "Templates",
          "icon": "$(file-code)",
          "contextualTitle": "Task Templates"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "gorevTasks",
        "contents": "No tasks found.\n[Create Task](command:gorev.createTask)\n[Create Project First](command:gorev.createProject)"
      },
      {
        "view": "gorevProjects",
        "contents": "No projects found.\n[Create Project](command:gorev.createProject)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "gorev.createTask",
          "when": "view == gorevTasks",
          "group": "navigation@1"
        },
        {
          "command": "gorev.refreshTasks",
          "when": "view == gorevTasks",
          "group": "navigation@2"
        },
        {
          "command": "gorev.showSummary",
          "when": "view == gorevTasks",
          "group": "navigation@3"
        },
        {
          "command": "gorev.setGrouping",
          "when": "view == gorevTasks",
          "group": "navigation@4"
        },
        {
          "command": "gorev.setSorting",
          "when": "view == gorevTasks",
          "group": "navigation@5"
        },
        {
          "command": "gorev.filterTasks",
          "when": "view == gorevTasks",
          "group": "navigation@6"
        },
        {
          "command": "gorev.createProject",
          "when": "view == gorevProjects",
          "group": "navigation"
        },
        {
          "command": "gorev.openTemplateWizard",
          "when": "view == gorevTemplates",
          "group": "navigation@1"
        },
        {
          "command": "gorev.refreshTemplates",
          "when": "view == gorevTemplates",
          "group": "navigation@2"
        },
        {
          "command": "gorev.initDefaultTemplates",
          "when": "view == gorevTemplates",
          "group": "navigation@3"
        }
      ],
      "view/item/context": [
        {
          "command": "gorev.showTaskDetail",
          "when": "view == gorevTasks && (viewItem == task || viewItem == task:parent || viewItem == task:child)",
          "group": "1_gorev_islemleri@1"
        },
        {
          "command": "gorev.editTaskTitle",
          "when": "view == gorevTasks && (viewItem == task || viewItem == task:parent || viewItem == task:child)",
          "group": "1_gorev_islemleri@2"
        },
        {
          "command": "gorev.detailedEdit",
          "when": "view == gorevTasks && (viewItem == task || viewItem == task:parent || viewItem == task:child)",
          "group": "1_gorev_islemleri@3"
        },
        {
          "command": "gorev.updateTaskStatus",
          "when": "view == gorevTasks && (viewItem == task || viewItem == task:parent || viewItem == task:child)",
          "group": "2_durum_degistir@1"
        },
        {
          "command": "gorev.quickStatusChange",
          "when": "view == gorevTasks && (viewItem == task || viewItem == task:parent || viewItem == task:child)",
          "group": "2_durum_degistir@2"
        },
        {
          "command": "gorev.createSubtask",
          "when": "view == gorevTasks && (viewItem == task || viewItem == task:parent)",
          "group": "3_organizasyon@1"
        },
        {
          "command": "gorev.addDependency",
          "when": "view == gorevTasks && (viewItem == task || viewItem == task:parent || viewItem == task:child)",
          "group": "3_organizasyon@2"
        },
        {
          "command": "gorev.changeParent",
          "when": "view == gorevTasks && (viewItem == task || viewItem == task:parent || viewItem == task:child)",
          "group": "3_organizasyon@3"
        },
        {
          "command": "gorev.removeParent",
          "when": "view == gorevTasks && viewItem == task:child",
          "group": "3_organizasyon@4"
        },
        {
          "command": "gorev.quickPriorityChange",
          "when": "view == gorevTasks && (viewItem == task || viewItem == task:parent || viewItem == task:child)",
          "group": "4_hizli_islemler@1"
        },
        {
          "command": "gorev.quickDateChange",
          "when": "view == gorevTasks && (viewItem == task || viewItem == task:parent || viewItem == task:child)",
          "group": "4_hizli_islemler@2"
        },
        {
          "command": "gorev.deleteTask",
          "when": "view == gorevTasks && (viewItem == task || viewItem == task:parent || viewItem == task:child)",
          "group": "5_tehlikeli_islemler"
        },
        {
          "command": "gorev.setActiveProject",
          "when": "view == gorevProjects && viewItem == project",
          "group": "1_action"
        },
        {
          "command": "gorev.showTaskDetail",
          "when": "view == gorevTasks && viewItem == task:selected",
          "group": "1_view"
        },
        {
          "command": "gorev.bulkUpdateStatus",
          "when": "view == gorevTasks && viewItem == task:selected",
          "group": "2_bulk@1"
        },
        {
          "command": "gorev.bulkDelete",
          "when": "view == gorevTasks && viewItem == task:selected",
          "group": "2_bulk@2"
        },
        {
          "command": "gorev.editTaskTitle",
          "when": "view == gorevTasks && viewItem == task:selected",
          "group": "3_modify@1"
        },
        {
          "command": "gorev.quickStatusChange",
          "when": "view == gorevTasks && viewItem == task:selected",
          "group": "3_modify@2"
        },
        {
          "command": "gorev.quickPriorityChange",
          "when": "view == gorevTasks && viewItem == task:selected",
          "group": "3_modify@3"
        },
        {
          "command": "gorev.quickDateChange",
          "when": "view == gorevTasks && viewItem == task:selected",
          "group": "3_modify@4"
        },
        {
          "command": "gorev.deleteTask",
          "when": "view == gorevTasks && viewItem == task:selected",
          "group": "4_delete"
        },
        {
          "command": "gorev.createFromTemplate",
          "when": "view == gorevTemplates && viewItem == template",
          "group": "1_use"
        },
        {
          "command": "gorev.showTemplateDetails",
          "when": "view == gorevTemplates && viewItem == template",
          "group": "2_view"
        },
        {
          "command": "gorev.exportTemplate",
          "when": "view == gorevTemplates && viewItem == template",
          "group": "3_export"
        }
      ],
      "commandPalette": [
        {
          "command": "gorev.quickCreateTask",
          "when": "gorev.connected"
        },
        {
          "command": "gorev.debug.seedTestData",
          "when": "gorev.connected && debugMode"
        },
        {
          "command": "gorev.debug.clearTestData",
          "when": "gorev.connected && debugMode"
        }
      ]
    },
    "keybindings": [
      {
        "command": "gorev.quickCreateTask",
        "key": "ctrl+shift+g",
        "mac": "cmd+shift+g"
      },
      {
        "command": "gorev.refreshTasks",
        "key": "ctrl+r",
        "mac": "cmd+r",
        "when": "focusedView == gorevTasks"
      },
      {
        "command": "gorev.editTaskTitle",
        "key": "f2",
        "when": "viewItem == task"
      },
      {
        "command": "gorev.clearAllFilters",
        "key": "ctrl+alt+r",
        "mac": "cmd+alt+r",
        "when": "focusedView == gorevTasks"
      },
      {
        "command": "gorev.toggleAllProjects",
        "key": "ctrl+alt+p",
        "mac": "cmd+alt+p",
        "when": "focusedView == gorevTasks"
      }
    ],
    "colors": [
      {
        "id": "gorev.highPriorityForeground",
        "description": "Color for high priority tasks",
        "defaults": {
          "dark": "#ff6b6b",
          "light": "#d32f2f"
        }
      },
      {
        "id": "gorev.mediumPriorityForeground",
        "description": "Color for medium priority tasks",
        "defaults": {
          "dark": "#ffa726",
          "light": "#f57c00"
        }
      },
      {
        "id": "gorev.lowPriorityForeground",
        "description": "Color for low priority tasks",
        "defaults": {
          "dark": "#42a5f5",
          "light": "#1976d2"
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "node_modules/typescript/bin/tsc -p ./",
    "watch": "node_modules/typescript/bin/tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./test/runTest.js",
    "test-watch": "npm run compile && node ./test/runTest.js --watch",
    "test-coverage": "node test-coverage.js",
    "coverage": "node test-coverage.js",
    "package": "vsce package",
    "publish": "vsce publish"
  },
  "devDependencies": {
    "@types/node": "20.x",
    "@types/vscode": "^1.95.0",
    "@typescript-eslint/eslint-plugin": "^8.0.0",
    "@typescript-eslint/parser": "^8.0.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "@vscode/vsce": "^3.0.0",
    "eslint": "^9.0.0",
    "typescript": "^5.8.3",
    "mocha": "^10.2.0",
    "sinon": "^17.0.1",
    "@types/mocha": "^10.0.6",
    "@types/sinon": "^17.0.2",
    "glob": "^10.3.10",
    "c8": "^9.0.0"
  },
  "dependencies": {
    "vscode-languageclient": "^9.0.1"
  }
}